<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Overview on TensorFlow for R</title><link>/deploy/</link><description>Recent content in Overview on TensorFlow for R</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/deploy/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploying a Shiny app with a TensorFlow model</title><link>/deploy/shiny/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/deploy/shiny/</guid><description>In this tutorial you will learn how to deploy a TensorFlow model inside a Shiny app. We will build a model that can classify handwritten digits in images, then we will build a Shiny app that letâ€™s you upload an image and get predictions from this model.
Building the model The first thing we are going to do is to build our model. We will use the Keras API to build this model.</description></item><item><title>Deploying a TensorFlow API with Plumber</title><link>/deploy/plumber/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/deploy/plumber/</guid><description>In this tutorial you will learn how to deploy a TensorFlow model using a plumber API.
In this example we will build an endpoint that takes POST requests sending images containing handwritten digits and returning the predicted number.
Building the model The first thing we are going to do is to build our model. W We will use the Keras API to build this model.
We will use the MNIST dataset to build our model.</description></item><item><title>Deploying a TensorFlow Model to RStudio Connect</title><link>/deploy/rsconnect/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/deploy/rsconnect/</guid><description>In this tutorial you will learn how to deploy a TensorFlow model to RStudio Connect. RStudio Connect uses TensorFlow Serving for performance but makes it much easier for R users to manage their deployment.
Building the model The first thing we are going to do is to build our model. We will use the Keras API to build this model.
We will use the MNIST dataset to build our model.</description></item><item><title>Deploying a TensorFlow model using TensorFlow serving</title><link>/deploy/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/deploy/docker/</guid><description>In this tutorial you will learn how to deploy a TensorFlow model using TensorFlow serving.
We will use the Docker container provided by the TensorFlow organization to deploy a model that classifies images of handwritten digits.
Using the Docker container is a an easy way to test the API locally and then deploy it to any cloud provider.
Building the model The first thing we are going to do is to build our model.</description></item></channel></rss>