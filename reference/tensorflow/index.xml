<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TensorFlow for R</title><link>/reference/tensorflow/</link><description>Recent content on TensorFlow for R</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/reference/tensorflow/index.xml" rel="self" type="application/rss+xml"/><item><title>All dims</title><link>/reference/tensorflow/all_dims/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/all_dims/</guid><description> This function returns an object that can be used when subsetting tensors with [. If you are familiar with python,, this is equivalent to the python Ellipsis ..., (not to be confused with ... in R).
all_dims() Examples if (FALSE) { # in python, if x is a numpy array or tensorflow tensor x[..., i] # the ellipsis means &#34;expand to match number of dimension of x&#34;. # to translate the above python expression to R, write: x[all_dims(), i] }</description></item><item><title>Creates a callable TensorFlow graph from an R function.</title><link>/reference/tensorflow/tf_function/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/tf_function/</guid><description>tf_function constructs a callable that executes a TensorFlow graph created by tracing the TensorFlow operations in f. This allows the TensorFlow runtime to apply optimizations and exploit parallelism in the computation defined by f.
tf_function(f, input_signature = NULL, autograph = FALSE, experimental_autograph_options = NULL) Arguments f the function to be compiled
input_signature A possibly nested sequence of tf$TensorSpec objects specifying the shapes and dtypes of the tensors that will be supplied to this function.</description></item><item><title>Enables, for the rest of the lifetime of this program, eager execution.</title><link>/reference/tensorflow/tfe_enable_eager_execution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/tfe_enable_eager_execution/</guid><description>If not called immediately on startup risks creating breakage and bugs.
tfe_enable_eager_execution(config = NULL, device_policy = c(&#34;explicit&#34;, &#34;warn&#34;, &#34;silent&#34;)) Arguments config (Optional) A tf$ConfigProto() protocol buffer with configuration options for the Context. Note that a lot of these options may be currently unimplemented or irrelevant when eager execution is enabled.
device_policy (Optional) What policy to use when trying to run an operation on a device with inputs which are not on that device.</description></item><item><title>Evaluate a Model</title><link>/reference/tensorflow/evaluate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/evaluate/</guid><description> Evaluate a model object. See implementations in the keras and tfestimators packages.
evaluate(object, ...) Arguments object An evaluatable R object.
... Optional arguments passed on to implementing methods.
Implementations keras
tfestimators</description></item><item><title>Export a Saved Model</title><link>/reference/tensorflow/export_savedmodel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/export_savedmodel/</guid><description> Serialize a model to disk. See implementations in the keras and tfestimators packages.
export_savedmodel(object, export_dir_base, ...) Arguments object An R object.
export_dir_base A string containing a directory in which to export the SavedModel.
... Optional arguments passed on to implementing methods.
Value The path to the exported directory, as a string.
Implementations keras
tfestimators</description></item><item><title>Install additional Python packages alongside TensorFlow</title><link>/reference/tensorflow/install_tensorflow_extras/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/install_tensorflow_extras/</guid><description> This function is deprecated. Use the extra_packages argument to install_tensorflow() to install additional packages.
install_tensorflow_extras(packages, conda = &#34;auto&#34;) Arguments packages Python packages to install
conda Path to conda executable (or &#34;auto&#34; to find conda using the PATH and other conventional install locations). Only used when TensorFlow is installed within a conda environment.</description></item><item><title>Install TensorFlow and its dependencies</title><link>/reference/tensorflow/install_tensorflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/install_tensorflow/</guid><description>Install TensorFlow and its dependencies
install_tensorflow(method = c(&#34;auto&#34;, &#34;virtualenv&#34;, &#34;conda&#34;), conda = &#34;auto&#34;, version = &#34;default&#34;, envname = NULL, extra_packages = NULL, restart_session = TRUE, conda_python_version = &#34;3.6&#34;, ...) Arguments method Installation method. By default, &#34;auto&#34; automatically finds a method that will work in the local environment. Change the default to force a specific installation method. Note that the &#34;virtualenv&#34; method is not available on Windows (as this isn&#39;t supported by TensorFlow).</description></item><item><title>Main TensorFlow module</title><link>/reference/tensorflow/tf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/tf/</guid><description> Interface to main TensorFlow module. Provides access to top level classes and functions as well as sub-modules (e.g. tf$nn, tf$contrib$learn, etc.).
tf Format TensorFlow module
Examples if (FALSE) { library(tensorflow) hello &amp;lt;- tf$constant(&#39;Hello, TensorFlow!&#39;) zeros &amp;lt;- tf$Variable(tf$zeros(shape(1L))) sess &amp;lt;- tf$Session() sess$run(tf$global_variables_initializer()) sess$run(hello) sess$run(zeros) }</description></item><item><title>Objects exported from other packages</title><link>/reference/tensorflow/reexports/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/reexports/</guid><description> These objects are imported from other packages. Follow the links below to see their documentation.
reticulateimport, dict, tuple, np_array, array_reshape, iterate, %as%, use_python, use_virtualenv, use_condaenv
tfrunsflags, flag_numeric, flag_integer, flag_string, flag_boolean, run_dir</description></item><item><title>Parse Command Line Arguments</title><link>/reference/tensorflow/parse_arguments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/parse_arguments/</guid><description> Parse command line arguments of the form --key=value and --key value. The values are assumed to be valid yaml and will be converted using yaml.load().
parse_arguments(arguments = NULL) Arguments arguments A vector of command line arguments. When NULL (the default), the command line arguments received by the current R process are used.</description></item><item><title>Parse Configuration Flags for a TensorFlow Application</title><link>/reference/tensorflow/parse_flags/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/parse_flags/</guid><description>Parse configuration flags for a TensorFlow application. Use this to parse and unify the configuration(s) specified through a flags.yml configuration file, alongside other arguments set through the command line.
parse_flags(config = Sys.getenv(&#34;R_CONFIG_ACTIVE&#34;, unset = &#34;default&#34;), file = &#34;flags.yml&#34;, arguments = commandArgs(TRUE)) Arguments config The configuration to use. Defaults to the active configuration for the current environment (as specified by the R_CONFIG_ACTIVE environment variable), or default when unset.</description></item><item><title>Simultaneously Train and Evaluate a Model</title><link>/reference/tensorflow/train_and_evaluate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/train_and_evaluate/</guid><description> Train and evaluate a model object. See implementation in the tfestimators package.
train_and_evaluate(object, ...) Arguments object An R object.
... Optional arguments passed on to implementing methods.
Implementations tfestimators</description></item><item><title>Subset tensors with &lt;code&gt;[&lt;/code&gt;</title><link>/reference/tensorflow/sub-.tensorflow.tensor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/sub-.tensorflow.tensor/</guid><description>Subset tensors with [
# S3 method for tensorflow.tensor [(x, ..., drop = TRUE, style = getOption(&#34;tensorflow.extract.style&#34;), options = tf_extract_opts(style)) Arguments x Tensorflow tensor
... slicing specs. See examples and details.
drop whether to drop scalar dimensions
style One of &#34;python&#34; or &#34;R&#34;.
options An object returned by tf_extract_opts()
Examples if (FALSE) { sess &amp;lt;- tf$Session() x &amp;lt;- tf$constant(1:15, shape = c(3, 5)) sess$run(x) # by default, numerics supplied to `.</description></item><item><title>Tensor extract options</title><link>/reference/tensorflow/tf_extract_opts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/tf_extract_opts/</guid><description>Tensor extract options
tf_extract_opts(style = getOption(&#34;tensorflow.extract.style&#34;), ..., one_based = getOption(&#34;tensorflow.extract.one_based&#34;, TRUE), inclusive_stop = getOption(&#34;tensorflow.extract.inclusive_stop&#34;, TRUE), disallow_out_of_bounds = getOption(&#34;tensorflow.extract.dissallow_out_of_bounds&#34;, TRUE), warn_tensors_passed_asis = getOption(&#34;tensorflow.extract.warn_tensors_passed_asis&#34;, TRUE), warn_negatives_pythonic = getOption(&#34;tensorflow.extract.warn_negatives_pythonic&#34;, TRUE)) Arguments style one of NULL (the default) &#34;R&#34; or &#34;python&#34;. If supplied, this overrides all other options. &#34;python&#34; is equivalent to all the other arguments being FALSE. &#34;R&#34; is equivalent to warn_tensors_passed_asis and warn_negatives_pythonic set to FALSE
.</description></item><item><title>Tensor shape</title><link>/reference/tensorflow/shape/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/shape/</guid><description> Tensor shape
shape(...) Arguments ... Tensor dimensions</description></item><item><title>TensorBoard Visualization Tool</title><link>/reference/tensorflow/tensorboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/tensorboard/</guid><description>TensorBoard is a tool inspecting and understanding your TensorFlow runs and graphs.
tensorboard(log_dir, action = c(&#34;start&#34;, &#34;stop&#34;), host = &#34;127.0.0.1&#34;, port = &#34;auto&#34;, launch_browser = getOption(&#34;tensorflow.tensorboard.browser&#34;, interactive()), reload_interval = 5, purge_orphaned_data = TRUE) Arguments log_dir Directories to scan for training logs. If this is a named character vector then the specified names will be used as aliases within TensorBoard.
action Specify whether to start or stop TensorBoard (TensorBoard will be stopped automatically when the R session from which it is launched is terminated).</description></item><item><title>TensorFlow configuration information</title><link>/reference/tensorflow/tf_config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/tf_config/</guid><description>TensorFlow configuration information
tf_config() tf_version() Value List with information on the current configuration of TensorFlow. You can determine whether TensorFlow was found using the available member (other members vary depending on whether available is TRUE or FALSE)</description></item><item><title>TensorFlow for R</title><link>/reference/tensorflow/tensorflow/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/tensorflow/</guid><description>TensorFlow is an open source software library for numerical computation using data flow graphs. Nodes in the graph represent mathematical operations, while the graph edges represent the multidimensional data arrays (tensors) communicated between them. The flexible architecture allows you to deploy computation to one or more CPUs or GPUs in a desktop, server, or mobile device with a single API.
Details The TensorFlow API is composed of a set of Python modules that enable constructing and executing TensorFlow graphs.</description></item><item><title>TensorFlow GPU configuration information</title><link>/reference/tensorflow/tf_gpu_configured/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/tf_gpu_configured/</guid><description>TensorFlow GPU configuration information
tf_gpu_configured(verbose = TRUE) Arguments verbose boolean. Wether to show extra GPU info.
Value A bool, wether GPU is configured or not, or NA if could not be determined.</description></item><item><title>TensorFlow Probability Module</title><link>/reference/tensorflow/tf_probability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/tf_probability/</guid><description> TensorFlow Probability Module
tf_probability() Value Reference to TensorFlow Probability functions and classes
Examples if (FALSE) { library(tensorflow) tfp &amp;lt;- tf_probability() tfp$distributions$Normal(loc=0, scale=1) }</description></item><item><title>Train a Model</title><link>/reference/tensorflow/train/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/train/</guid><description> Train a model object. See implementation in the tfestimators package.
train(object, ...) Arguments object A trainable R object.
... Optional arguments passed on to implementing methods.
Implementations tfestimators</description></item><item><title>Use a session with a random seed</title><link>/reference/tensorflow/use_session_with_seed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/use_session_with_seed/</guid><description>Set various random seeds required to ensure reproducible results. The provided seed value will establish a new random seed for R, Python, NumPy, and TensorFlow. GPU computations and CPU parallelism will also be disabled by default.
use_session_with_seed(seed, disable_gpu = TRUE, disable_parallel_cpu = TRUE, quiet = FALSE) Arguments seed A single value, interpreted as an integer
disable_gpu TRUE to disable GPU execution (see Parallelism below).</description></item><item><title>Use Compatibility</title><link>/reference/tensorflow/use_compat/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/use_compat/</guid><description> Enables TensorFlow to run under a different API version for compatibility with previous versions. For instance, this is useful to run TensorFlow 1.x code when using TensorFlow 2.x.
use_compat(version = c(&#34;v1&#34;, &#34;v2&#34;)) Arguments version The version to activate. Must be &#34;v1&#34; or &#34;v2&#34;
Examples if (FALSE) { library(tensorflow) use_compat(&#34;v1&#34;) }</description></item><item><title>View a Saved Model</title><link>/reference/tensorflow/view_savedmodel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/reference/tensorflow/view_savedmodel/</guid><description>View a serialized model from disk.
view_savedmodel(model_dir) Arguments model_dir The path to the exported model, as a string.
Value URL for browsing TensorBoard (invisibly).</description></item></channel></rss>